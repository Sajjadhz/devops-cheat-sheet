## Create Cronjobs in Kubernetes

### Question : 
There are some jobs/tasks that need to be run regularly on different schedules. Currently the Nautilus DevOps team is working on developing some scripts that will be executed on different schedules, but for the time being the team is creating some cron jobs in Kubernetes cluster with some dummy commands (which will be replaced by original scripts later). Create a cronjob as per details given below:

Create a cronjob named nautilus.

Set schedule to */2 * * * *.

Container name should be cron-nautilus.

Use nginx image with latest tag only and remember to mention tag i.e nginx:latest.

Run a dummy command echo Welcome to xfusioncorp.

Ensure restart policy is OnFailure.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

### Solution:  

1.  Kindly check the existing pod & cronjob

`kubectl get pod`

`kubectl get cronjob`

2.  Create a YAML  file with all the parameters

`vi /tmp/cron.yml`

`cat /tmp/cron.yml`
```
apiVersion: batch/v1beta1

kind: CronJob

metadata:

  name: nautilus

spec:

  schedule: "*/2 * * * *"

  jobTemplate:

    spec:

      template:

        spec:

          containers:

            - name: cron-nautilus

              image: nginx:latest

              command:

                - /bin/sh

                - -c

                - echo Welcome to xfusioncorp

          restartPolicy: OnFailure
```
3. Run the below command to create a pod 

`kubectl create -f /tmp/cron.yml`

4.  Wait for the pod to get completed status & check Cronjob

`kubectl get cronjob`

`kubectl get pod`

5.  Validate the task by running the below command 

`kubectl logs nautilus-1627054320-f6xl6`