## Deploy Apache Web Server on Kubernetes Cluster

### Question : 
There is an application that needs to be deployed on Kubernetes cluster under Apache web server. The Nautilus application development team has asked the DevOps team to deploy it. We need to develop a template as per requirements mentioned below:

Create a namespace named as httpd-namespace-nautilus.

Create a service named as httpd-service-nautilus under same namespace, targetPort should be 80 and nodePort should be 30004.

Create a deployment named as httpd-deployment-nautilus under the same namespace as mentioned above. Use image httpd with latest tag only and remember to mention tag i.e httpd:latest, and container name should be httpd-container-nautilus. And make sure replicas counts are 4.

Set labels app to httpd_app_nautilus.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

### Solution:  
1. At first  create a namespace as per the task 

    `kubectl create namespace httpd-namespace-nautilus`

    `kubectl get namespace`

2. Create yaml  file with all the parameters

```
cat > /tmp/http.yaml <<EOF
apiVersion: v1
kind: Service
metadata:
  name: httpd-service-nautilus
  namespace: httpd-namespace-nautilus
spec:
  type: NodePort
  selector:
    app: httpd_app_nautilus
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30004
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deployment-nautilus
  namespace: httpd-namespace-nautilus
  labels:
    app: httpd_app_nautilus
spec:
  replicas: 4
  selector:
    matchLabels:
      app: httpd_app_nautilus
  template:
    metadata:
      labels:
        app: httpd_app_nautilus
    spec:
      containers:
        - name: httpd-container-nautilus
          image: httpd:latest
          ports:
            - containerPort: 80
EOF
```

3.  Run below command to create pod

    `kubectl create -f /tmp/http.yaml`

4.  Wait for  pods to get running status
        `kubectl get pods`